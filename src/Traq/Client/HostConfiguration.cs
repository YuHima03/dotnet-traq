/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Net.Http;
using Microsoft.Extensions.DependencyInjection;
using Traq.Api;
using Traq.Model;
using System.Diagnostics.CodeAnalysis;

namespace Traq.Client
{
    /// <summary>
    /// Provides hosting configuration for Traq
    /// </summary>
    public class HostConfiguration
    {
        private readonly IServiceCollection _services;
        private readonly JsonSerializerOptions _jsonOptions = new JsonSerializerOptions();

        internal bool HttpClientsAdded { get; private set; }

        /// <summary>
        /// Instantiates the class 
        /// </summary>
        /// <param name="services"></param>
        [RequiresUnreferencedCode()]
        public HostConfiguration(IServiceCollection services)
        {
            _services = services;
            _jsonOptions.Converters.Add(new JsonStringEnumConverter());
            _jsonOptions.Converters.Add(new DateTimeJsonConverter());
            _jsonOptions.Converters.Add(new DateTimeNullableJsonConverter());
            _jsonOptions.Converters.Add(new DateOnlyJsonConverter());
            _jsonOptions.Converters.Add(new DateOnlyNullableJsonConverter());
            _jsonOptions.Converters.Add(new ActiveOAuth2TokenJsonConverter());
            _jsonOptions.Converters.Add(new ActivityTimelineMessageJsonConverter());
            _jsonOptions.Converters.Add(new AddUserGroupMemberRequestJsonConverter());
            _jsonOptions.Converters.Add(new BotJsonConverter());
            _jsonOptions.Converters.Add(new BotDetailJsonConverter());
            _jsonOptions.Converters.Add(new BotEventLogJsonConverter());
            _jsonOptions.Converters.Add(new BotEventResultJsonConverter());
            _jsonOptions.Converters.Add(new BotEventResultNullableJsonConverter());
            _jsonOptions.Converters.Add(new BotModeJsonConverter());
            _jsonOptions.Converters.Add(new BotModeNullableJsonConverter());
            _jsonOptions.Converters.Add(new BotStateJsonConverter());
            _jsonOptions.Converters.Add(new BotStateNullableJsonConverter());
            _jsonOptions.Converters.Add(new BotTokensJsonConverter());
            _jsonOptions.Converters.Add(new BotUserJsonConverter());
            _jsonOptions.Converters.Add(new ChannelJsonConverter());
            _jsonOptions.Converters.Add(new ChannelEventJsonConverter());
            _jsonOptions.Converters.Add(new ChannelEventDetailJsonConverter());
            _jsonOptions.Converters.Add(new ChannelListJsonConverter());
            _jsonOptions.Converters.Add(new ChannelPathJsonConverter());
            _jsonOptions.Converters.Add(new ChannelStatsJsonConverter());
            _jsonOptions.Converters.Add(new ChannelStatsStampJsonConverter());
            _jsonOptions.Converters.Add(new ChannelStatsUserJsonConverter());
            _jsonOptions.Converters.Add(new ChannelSubscribeLevelJsonConverter());
            _jsonOptions.Converters.Add(new ChannelSubscribeLevelNullableJsonConverter());
            _jsonOptions.Converters.Add(new ChannelTopicJsonConverter());
            _jsonOptions.Converters.Add(new ChannelViewStateJsonConverter());
            _jsonOptions.Converters.Add(new ChannelViewStateNullableJsonConverter());
            _jsonOptions.Converters.Add(new ChannelViewerJsonConverter());
            _jsonOptions.Converters.Add(new ChildCreatedEventJsonConverter());
            _jsonOptions.Converters.Add(new ClipFolderJsonConverter());
            _jsonOptions.Converters.Add(new ClippedMessageJsonConverter());
            _jsonOptions.Converters.Add(new DMChannelJsonConverter());
            _jsonOptions.Converters.Add(new ExternalProviderUserJsonConverter());
            _jsonOptions.Converters.Add(new FileInfoJsonConverter());
            _jsonOptions.Converters.Add(new FileInfoThumbnailJsonConverter());
            _jsonOptions.Converters.Add(new ForcedNotificationChangedEventJsonConverter());
            _jsonOptions.Converters.Add(new GetBot200ResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetClient200ResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetNotifyCitationJsonConverter());
            _jsonOptions.Converters.Add(new LoginSessionJsonConverter());
            _jsonOptions.Converters.Add(new MessageJsonConverter());
            _jsonOptions.Converters.Add(new MessageClipJsonConverter());
            _jsonOptions.Converters.Add(new MessagePinJsonConverter());
            _jsonOptions.Converters.Add(new MessageSearchResultJsonConverter());
            _jsonOptions.Converters.Add(new MessageStampJsonConverter());
            _jsonOptions.Converters.Add(new ModelVersionJsonConverter());
            _jsonOptions.Converters.Add(new MyChannelViewStateJsonConverter());
            _jsonOptions.Converters.Add(new MyUserDetailJsonConverter());
            _jsonOptions.Converters.Add(new NameChangedEventJsonConverter());
            _jsonOptions.Converters.Add(new OAuth2ClientJsonConverter());
            _jsonOptions.Converters.Add(new OAuth2ClientDetailJsonConverter());
            _jsonOptions.Converters.Add(new OAuth2PromptJsonConverter());
            _jsonOptions.Converters.Add(new OAuth2PromptNullableJsonConverter());
            _jsonOptions.Converters.Add(new OAuth2ResponseTypeJsonConverter());
            _jsonOptions.Converters.Add(new OAuth2ResponseTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new OAuth2ScopeJsonConverter());
            _jsonOptions.Converters.Add(new OAuth2ScopeNullableJsonConverter());
            _jsonOptions.Converters.Add(new OAuth2TokenJsonConverter());
            _jsonOptions.Converters.Add(new OIDCTraqUserInfoJsonConverter());
            _jsonOptions.Converters.Add(new OIDCUserInfoJsonConverter());
            _jsonOptions.Converters.Add(new OgpJsonConverter());
            _jsonOptions.Converters.Add(new OgpMediaJsonConverter());
            _jsonOptions.Converters.Add(new ParentChangedEventJsonConverter());
            _jsonOptions.Converters.Add(new PatchBotRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchChannelRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchChannelSubscribersRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchClientRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchClipFolderRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchGroupMemberRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchMeRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchStampPaletteRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchStampRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchUserGroupRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchUserRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchUserTagRequestJsonConverter());
            _jsonOptions.Converters.Add(new PatchWebhookRequestJsonConverter());
            _jsonOptions.Converters.Add(new PinJsonConverter());
            _jsonOptions.Converters.Add(new PinAddedEventJsonConverter());
            _jsonOptions.Converters.Add(new PinRemovedEventJsonConverter());
            _jsonOptions.Converters.Add(new PostBotActionJoinRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostBotActionLeaveRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostBotRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostChannelRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostClientRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostClipFolderMessageRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostClipFolderRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostLinkExternalAccountJsonConverter());
            _jsonOptions.Converters.Add(new PostLoginRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostMessageRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostMessageStampRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostMyFCMDeviceRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostStampPaletteRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostStarRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostUnlinkExternalAccountJsonConverter());
            _jsonOptions.Converters.Add(new PostUserGroupAdminRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostUserGroupRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostUserRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostUserTagRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostWebRTCAuthenticateRequestJsonConverter());
            _jsonOptions.Converters.Add(new PostWebhookRequestJsonConverter());
            _jsonOptions.Converters.Add(new PutChannelSubscribeLevelRequestJsonConverter());
            _jsonOptions.Converters.Add(new PutChannelSubscribersRequestJsonConverter());
            _jsonOptions.Converters.Add(new PutChannelTopicRequestJsonConverter());
            _jsonOptions.Converters.Add(new PutMyPasswordRequestJsonConverter());
            _jsonOptions.Converters.Add(new PutNotifyCitationRequestJsonConverter());
            _jsonOptions.Converters.Add(new PutUserPasswordRequestJsonConverter());
            _jsonOptions.Converters.Add(new QallEndpointResponseJsonConverter());
            _jsonOptions.Converters.Add(new QallMetadataRequestJsonConverter());
            _jsonOptions.Converters.Add(new QallMetadataResponseJsonConverter());
            _jsonOptions.Converters.Add(new QallParticipantJsonConverter());
            _jsonOptions.Converters.Add(new QallParticipantRequestJsonConverter());
            _jsonOptions.Converters.Add(new QallParticipantRequestUsersInnerJsonConverter());
            _jsonOptions.Converters.Add(new QallParticipantResponseJsonConverter());
            _jsonOptions.Converters.Add(new QallParticipantResponseResultsInnerJsonConverter());
            _jsonOptions.Converters.Add(new QallRoomStateChangedEventJsonConverter());
            _jsonOptions.Converters.Add(new QallRoomStateChangedEventRoomStatesInnerJsonConverter());
            _jsonOptions.Converters.Add(new QallRoomStateChangedEventRoomStatesInnerParticipantsInnerJsonConverter());
            _jsonOptions.Converters.Add(new QallRoomWithParticipantsJsonConverter());
            _jsonOptions.Converters.Add(new QallSoundboardItemCreatedEventJsonConverter());
            _jsonOptions.Converters.Add(new QallSoundboardItemDeletedEventJsonConverter());
            _jsonOptions.Converters.Add(new QallTokenResponseJsonConverter());
            _jsonOptions.Converters.Add(new SessionJsonConverter());
            _jsonOptions.Converters.Add(new SoundboardItemJsonConverter());
            _jsonOptions.Converters.Add(new SoundboardPlayRequestJsonConverter());
            _jsonOptions.Converters.Add(new SoundboardPlayResponseJsonConverter());
            _jsonOptions.Converters.Add(new SoundboardUploadResponseJsonConverter());
            _jsonOptions.Converters.Add(new StampJsonConverter());
            _jsonOptions.Converters.Add(new StampHistoryEntryJsonConverter());
            _jsonOptions.Converters.Add(new StampPaletteJsonConverter());
            _jsonOptions.Converters.Add(new StampStatsJsonConverter());
            _jsonOptions.Converters.Add(new StampWithThumbnailJsonConverter());
            _jsonOptions.Converters.Add(new SubscribersChangedEventJsonConverter());
            _jsonOptions.Converters.Add(new TagJsonConverter());
            _jsonOptions.Converters.Add(new ThumbnailInfoJsonConverter());
            _jsonOptions.Converters.Add(new ThumbnailTypeJsonConverter());
            _jsonOptions.Converters.Add(new ThumbnailTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new TopicChangedEventJsonConverter());
            _jsonOptions.Converters.Add(new UnreadChannelJsonConverter());
            _jsonOptions.Converters.Add(new UserJsonConverter());
            _jsonOptions.Converters.Add(new UserAccountStateJsonConverter());
            _jsonOptions.Converters.Add(new UserAccountStateNullableJsonConverter());
            _jsonOptions.Converters.Add(new UserDetailJsonConverter());
            _jsonOptions.Converters.Add(new UserGroupJsonConverter());
            _jsonOptions.Converters.Add(new UserGroupMemberJsonConverter());
            _jsonOptions.Converters.Add(new UserPermissionJsonConverter());
            _jsonOptions.Converters.Add(new UserPermissionNullableJsonConverter());
            _jsonOptions.Converters.Add(new UserSettingsJsonConverter());
            _jsonOptions.Converters.Add(new UserStatsJsonConverter());
            _jsonOptions.Converters.Add(new UserStatsStampJsonConverter());
            _jsonOptions.Converters.Add(new UserSubscribeStateJsonConverter());
            _jsonOptions.Converters.Add(new UserTagJsonConverter());
            _jsonOptions.Converters.Add(new VersionFlagsJsonConverter());
            _jsonOptions.Converters.Add(new VisibilityChangedEventJsonConverter());
            _jsonOptions.Converters.Add(new WebRTCAuthenticateResultJsonConverter());
            _jsonOptions.Converters.Add(new WebRTCUserStateJsonConverter());
            _jsonOptions.Converters.Add(new WebhookJsonConverter());
            JsonSerializerOptionsProvider jsonSerializerOptionsProvider = new(_jsonOptions);
            _services.AddSingleton(jsonSerializerOptionsProvider);

            _jsonOptions.TypeInfoResolver = System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver.Combine(
                new ActiveOAuth2TokenSerializationContext(),
                new ActivityTimelineMessageSerializationContext(),
                new AddUserGroupMemberRequestSerializationContext(),
                new BotSerializationContext(),
                new BotDetailSerializationContext(),
                new BotEventLogSerializationContext(),
                new BotEventResultSerializationContext(),
                new BotModeSerializationContext(),
                new BotStateSerializationContext(),
                new BotTokensSerializationContext(),
                new BotUserSerializationContext(),
                new ChannelSerializationContext(),
                new ChannelEventSerializationContext(),
                new ChannelEventDetailSerializationContext(),
                new ChannelListSerializationContext(),
                new ChannelPathSerializationContext(),
                new ChannelStatsSerializationContext(),
                new ChannelStatsStampSerializationContext(),
                new ChannelStatsUserSerializationContext(),
                new ChannelSubscribeLevelSerializationContext(),
                new ChannelTopicSerializationContext(),
                new ChannelViewStateSerializationContext(),
                new ChannelViewerSerializationContext(),
                new ChildCreatedEventSerializationContext(),
                new ClipFolderSerializationContext(),
                new ClippedMessageSerializationContext(),
                new DMChannelSerializationContext(),
                new ExternalProviderUserSerializationContext(),
                new FileInfoSerializationContext(),
                new FileInfoThumbnailSerializationContext(),
                new ForcedNotificationChangedEventSerializationContext(),
                new GetBot200ResponseSerializationContext(),
                new GetClient200ResponseSerializationContext(),
                new GetNotifyCitationSerializationContext(),
                new LoginSessionSerializationContext(),
                new MessageSerializationContext(),
                new MessageClipSerializationContext(),
                new MessagePinSerializationContext(),
                new MessageSearchResultSerializationContext(),
                new MessageStampSerializationContext(),
                new ModelVersionSerializationContext(),
                new MyChannelViewStateSerializationContext(),
                new MyUserDetailSerializationContext(),
                new NameChangedEventSerializationContext(),
                new OAuth2ClientSerializationContext(),
                new OAuth2ClientDetailSerializationContext(),
                new OAuth2PromptSerializationContext(),
                new OAuth2ResponseTypeSerializationContext(),
                new OAuth2ScopeSerializationContext(),
                new OAuth2TokenSerializationContext(),
                new OIDCTraqUserInfoSerializationContext(),
                new OIDCUserInfoSerializationContext(),
                new OgpSerializationContext(),
                new OgpMediaSerializationContext(),
                new ParentChangedEventSerializationContext(),
                new PatchBotRequestSerializationContext(),
                new PatchChannelRequestSerializationContext(),
                new PatchChannelSubscribersRequestSerializationContext(),
                new PatchClientRequestSerializationContext(),
                new PatchClipFolderRequestSerializationContext(),
                new PatchGroupMemberRequestSerializationContext(),
                new PatchMeRequestSerializationContext(),
                new PatchStampPaletteRequestSerializationContext(),
                new PatchStampRequestSerializationContext(),
                new PatchUserGroupRequestSerializationContext(),
                new PatchUserRequestSerializationContext(),
                new PatchUserTagRequestSerializationContext(),
                new PatchWebhookRequestSerializationContext(),
                new PinSerializationContext(),
                new PinAddedEventSerializationContext(),
                new PinRemovedEventSerializationContext(),
                new PostBotActionJoinRequestSerializationContext(),
                new PostBotActionLeaveRequestSerializationContext(),
                new PostBotRequestSerializationContext(),
                new PostChannelRequestSerializationContext(),
                new PostClientRequestSerializationContext(),
                new PostClipFolderMessageRequestSerializationContext(),
                new PostClipFolderRequestSerializationContext(),
                new PostLinkExternalAccountSerializationContext(),
                new PostLoginRequestSerializationContext(),
                new PostMessageRequestSerializationContext(),
                new PostMessageStampRequestSerializationContext(),
                new PostMyFCMDeviceRequestSerializationContext(),
                new PostStampPaletteRequestSerializationContext(),
                new PostStarRequestSerializationContext(),
                new PostUnlinkExternalAccountSerializationContext(),
                new PostUserGroupAdminRequestSerializationContext(),
                new PostUserGroupRequestSerializationContext(),
                new PostUserRequestSerializationContext(),
                new PostUserTagRequestSerializationContext(),
                new PostWebRTCAuthenticateRequestSerializationContext(),
                new PostWebhookRequestSerializationContext(),
                new PutChannelSubscribeLevelRequestSerializationContext(),
                new PutChannelSubscribersRequestSerializationContext(),
                new PutChannelTopicRequestSerializationContext(),
                new PutMyPasswordRequestSerializationContext(),
                new PutNotifyCitationRequestSerializationContext(),
                new PutUserPasswordRequestSerializationContext(),
                new QallEndpointResponseSerializationContext(),
                new QallMetadataRequestSerializationContext(),
                new QallMetadataResponseSerializationContext(),
                new QallParticipantSerializationContext(),
                new QallParticipantRequestSerializationContext(),
                new QallParticipantRequestUsersInnerSerializationContext(),
                new QallParticipantResponseSerializationContext(),
                new QallParticipantResponseResultsInnerSerializationContext(),
                new QallRoomStateChangedEventSerializationContext(),
                new QallRoomStateChangedEventRoomStatesInnerSerializationContext(),
                new QallRoomStateChangedEventRoomStatesInnerParticipantsInnerSerializationContext(),
                new QallRoomWithParticipantsSerializationContext(),
                new QallSoundboardItemCreatedEventSerializationContext(),
                new QallSoundboardItemDeletedEventSerializationContext(),
                new QallTokenResponseSerializationContext(),
                new SessionSerializationContext(),
                new SoundboardItemSerializationContext(),
                new SoundboardPlayRequestSerializationContext(),
                new SoundboardPlayResponseSerializationContext(),
                new SoundboardUploadResponseSerializationContext(),
                new StampSerializationContext(),
                new StampHistoryEntrySerializationContext(),
                new StampPaletteSerializationContext(),
                new StampStatsSerializationContext(),
                new StampWithThumbnailSerializationContext(),
                new SubscribersChangedEventSerializationContext(),
                new TagSerializationContext(),
                new ThumbnailInfoSerializationContext(),
                new ThumbnailTypeSerializationContext(),
                new TopicChangedEventSerializationContext(),
                new UnreadChannelSerializationContext(),
                new UserSerializationContext(),
                new UserAccountStateSerializationContext(),
                new UserDetailSerializationContext(),
                new UserGroupSerializationContext(),
                new UserGroupMemberSerializationContext(),
                new UserPermissionSerializationContext(),
                new UserSettingsSerializationContext(),
                new UserStatsSerializationContext(),
                new UserStatsStampSerializationContext(),
                new UserSubscribeStateSerializationContext(),
                new UserTagSerializationContext(),
                new VersionFlagsSerializationContext(),
                new VisibilityChangedEventSerializationContext(),
                new WebRTCAuthenticateResultSerializationContext(),
                new WebRTCUserStateSerializationContext(),
                new WebhookSerializationContext(),
                new System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver()
            );

            _services.AddSingleton<IApiFactory, ApiFactory>();
            _services.AddSingleton<ActivityApiEvents>();
            _services.AddTransient<IActivityApi, ActivityApi>();
            _services.AddSingleton<AuthenticationApiEvents>();
            _services.AddTransient<IAuthenticationApi, AuthenticationApi>();
            _services.AddSingleton<BotApiEvents>();
            _services.AddTransient<IBotApi, BotApi>();
            _services.AddSingleton<ChannelApiEvents>();
            _services.AddTransient<IChannelApi, ChannelApi>();
            _services.AddSingleton<ClipApiEvents>();
            _services.AddTransient<IClipApi, ClipApi>();
            _services.AddSingleton<FileApiEvents>();
            _services.AddTransient<IFileApi, FileApi>();
            _services.AddSingleton<GroupApiEvents>();
            _services.AddTransient<IGroupApi, GroupApi>();
            _services.AddSingleton<MeApiEvents>();
            _services.AddTransient<IMeApi, MeApi>();
            _services.AddSingleton<MessageApiEvents>();
            _services.AddTransient<IMessageApi, MessageApi>();
            _services.AddSingleton<NotificationApiEvents>();
            _services.AddTransient<INotificationApi, NotificationApi>();
            _services.AddSingleton<Oauth2ApiEvents>();
            _services.AddTransient<IOauth2Api, Oauth2Api>();
            _services.AddSingleton<OgpApiEvents>();
            _services.AddTransient<IOgpApi, OgpApi>();
            _services.AddSingleton<PinApiEvents>();
            _services.AddTransient<IPinApi, PinApi>();
            _services.AddSingleton<PublicApiEvents>();
            _services.AddTransient<IPublicApi, PublicApi>();
            _services.AddSingleton<QallApiEvents>();
            _services.AddTransient<IQallApi, QallApi>();
            _services.AddSingleton<StampApiEvents>();
            _services.AddTransient<IStampApi, StampApi>();
            _services.AddSingleton<StarApiEvents>();
            _services.AddTransient<IStarApi, StarApi>();
            _services.AddSingleton<UserApiEvents>();
            _services.AddTransient<IUserApi, UserApi>();
            _services.AddSingleton<UserTagApiEvents>();
            _services.AddTransient<IUserTagApi, UserTagApi>();
            _services.AddSingleton<WebhookApiEvents>();
            _services.AddTransient<IWebhookApi, WebhookApi>();
            _services.AddSingleton<WebrtcApiEvents>();
            _services.AddTransient<IWebrtcApi, WebrtcApi>();
        }

        /// <summary>
        /// Configures the HttpClients.
        /// </summary>
        /// <param name="client"></param>
        /// <param name="builder"></param>
        /// <returns></returns>
        public HostConfiguration AddApiHttpClients
        (
            Action<HttpClient>? client = null, Action<IHttpClientBuilder>? builder = null)
        {
            if (client == null)
                client = c => c.BaseAddress = new Uri(ClientUtils.BASE_ADDRESS);

            List<IHttpClientBuilder> builders = new List<IHttpClientBuilder>();

            builders.Add(_services.AddHttpClient<IActivityApi, ActivityApi>(client));
            builders.Add(_services.AddHttpClient<IAuthenticationApi, AuthenticationApi>(client));
            builders.Add(_services.AddHttpClient<IBotApi, BotApi>(client));
            builders.Add(_services.AddHttpClient<IChannelApi, ChannelApi>(client));
            builders.Add(_services.AddHttpClient<IClipApi, ClipApi>(client));
            builders.Add(_services.AddHttpClient<IFileApi, FileApi>(client));
            builders.Add(_services.AddHttpClient<IGroupApi, GroupApi>(client));
            builders.Add(_services.AddHttpClient<IMeApi, MeApi>(client));
            builders.Add(_services.AddHttpClient<IMessageApi, MessageApi>(client));
            builders.Add(_services.AddHttpClient<INotificationApi, NotificationApi>(client));
            builders.Add(_services.AddHttpClient<IOauth2Api, Oauth2Api>(client));
            builders.Add(_services.AddHttpClient<IOgpApi, OgpApi>(client));
            builders.Add(_services.AddHttpClient<IPinApi, PinApi>(client));
            builders.Add(_services.AddHttpClient<IPublicApi, PublicApi>(client));
            builders.Add(_services.AddHttpClient<IQallApi, QallApi>(client));
            builders.Add(_services.AddHttpClient<IStampApi, StampApi>(client));
            builders.Add(_services.AddHttpClient<IStarApi, StarApi>(client));
            builders.Add(_services.AddHttpClient<IUserApi, UserApi>(client));
            builders.Add(_services.AddHttpClient<IUserTagApi, UserTagApi>(client));
            builders.Add(_services.AddHttpClient<IWebhookApi, WebhookApi>(client));
            builders.Add(_services.AddHttpClient<IWebrtcApi, WebrtcApi>(client));

            if (builder != null)
                foreach (IHttpClientBuilder instance in builders)
                    builder(instance);

            HttpClientsAdded = true;

            return this;
        }

        /// <summary>
        /// Configures the JsonSerializerSettings
        /// </summary>
        /// <param name="options"></param>
        /// <returns></returns>
        public HostConfiguration ConfigureJsonOptions(Action<JsonSerializerOptions> options)
        {
            options(_jsonOptions);

            return this;
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="token"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(TTokenBase token) where TTokenBase : TokenBase
        {
            return AddTokens(new TTokenBase[] { token });
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="tokens"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(IEnumerable<TTokenBase> tokens) where TTokenBase : TokenBase
        {
            TokenContainer<TTokenBase> container = new TokenContainer<TTokenBase>(tokens);
            _services.AddSingleton(services => container);

            return this;
        }

        /// <summary>
        /// Adds a token provider to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenProvider"></typeparam>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <returns></returns>
        public HostConfiguration UseProvider<[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors)] TTokenProvider, TTokenBase>()
            where TTokenProvider : TokenProvider<TTokenBase>
            where TTokenBase : TokenBase
        {
            _services.AddSingleton<TTokenProvider>();
            _services.AddSingleton<TokenProvider<TTokenBase>>(services => services.GetRequiredService<TTokenProvider>());

            return this;
        }
    }
}
