/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Traq.Client.FileParameter;
using OpenAPIDateConverter = Traq.Client.OpenAPIDateConverter;

namespace Traq.Model
{
    /// <summary>
    /// SoundboardPlayResponse
    /// </summary>
    [DataContract(Name = "soundboardPlayResponse")]
    public partial class SoundboardPlayResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SoundboardPlayResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SoundboardPlayResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SoundboardPlayResponse" /> class.
        /// </summary>
        /// <param name="ingressId">作成された Ingress のID (required).</param>
        /// <param name="url">作成された Ingress のストリームURL等.</param>
        /// <param name="streamKey">RTMP配信の場合のstream key.</param>
        public SoundboardPlayResponse(string ingressId = default(string), string url = default(string), string streamKey = default(string))
        {
            // to ensure "ingressId" is required (not null)
            if (ingressId == null)
            {
                throw new ArgumentNullException("ingressId is a required property for SoundboardPlayResponse and cannot be null");
            }
            this.IngressId = ingressId;
            this.Url = url;
            this.StreamKey = streamKey;
        }

        /// <summary>
        /// 作成された Ingress のID
        /// </summary>
        /// <value>作成された Ingress のID</value>
        [DataMember(Name = "ingressId", IsRequired = true, EmitDefaultValue = true)]
        public string IngressId { get; set; }

        /// <summary>
        /// 作成された Ingress のストリームURL等
        /// </summary>
        /// <value>作成された Ingress のストリームURL等</value>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// RTMP配信の場合のstream key
        /// </summary>
        /// <value>RTMP配信の場合のstream key</value>
        [DataMember(Name = "streamKey", EmitDefaultValue = false)]
        public string StreamKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SoundboardPlayResponse {\n");
            sb.Append("  IngressId: ").Append(IngressId).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  StreamKey: ").Append(StreamKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
