/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Traq.Client.FileParameter;
using OpenAPIDateConverter = Traq.Client.OpenAPIDateConverter;

namespace Traq.Model
{
    /// <summary>
    /// Qallのサウンドボードアイテムが作成された
    /// </summary>
    [DataContract(Name = "QallSoundboardItemCreatedEvent")]
    public partial class QallSoundboardItemCreatedEvent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QallSoundboardItemCreatedEvent" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected QallSoundboardItemCreatedEvent() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="QallSoundboardItemCreatedEvent" /> class.
        /// </summary>
        /// <param name="soundId">作成されたサウンドボードアイテムのId (required).</param>
        /// <param name="name">作成されたサウンドボードアイテムの名前 (required).</param>
        /// <param name="creatorId">作成者のId (required).</param>
        public QallSoundboardItemCreatedEvent(Guid soundId = default(Guid), string name = default(string), Guid creatorId = default(Guid))
        {
            this.SoundId = soundId;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for QallSoundboardItemCreatedEvent and cannot be null");
            }
            this.Name = name;
            this.CreatorId = creatorId;
        }

        /// <summary>
        /// 作成されたサウンドボードアイテムのId
        /// </summary>
        /// <value>作成されたサウンドボードアイテムのId</value>
        [DataMember(Name = "soundId", IsRequired = true, EmitDefaultValue = true)]
        public Guid SoundId { get; set; }

        /// <summary>
        /// 作成されたサウンドボードアイテムの名前
        /// </summary>
        /// <value>作成されたサウンドボードアイテムの名前</value>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// 作成者のId
        /// </summary>
        /// <value>作成者のId</value>
        [DataMember(Name = "creatorId", IsRequired = true, EmitDefaultValue = true)]
        public Guid CreatorId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class QallSoundboardItemCreatedEvent {\n");
            sb.Append("  SoundId: ").Append(SoundId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CreatorId: ").Append(CreatorId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
