/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Traq.Client.FileParameter;
using OpenAPIDateConverter = Traq.Client.OpenAPIDateConverter;

namespace Traq.Model
{
    /// <summary>
    /// BOTのトークン情報
    /// </summary>
    [DataContract(Name = "BotTokens")]
    public partial class BotTokens : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BotTokens" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BotTokens() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BotTokens" /> class.
        /// </summary>
        /// <param name="verificationToken">Verification Token (required).</param>
        /// <param name="accessToken">BOTアクセストークン (required).</param>
        public BotTokens(string verificationToken = default(string), string accessToken = default(string))
        {
            // to ensure "verificationToken" is required (not null)
            if (verificationToken == null)
            {
                throw new ArgumentNullException("verificationToken is a required property for BotTokens and cannot be null");
            }
            this.VerificationToken = verificationToken;
            // to ensure "accessToken" is required (not null)
            if (accessToken == null)
            {
                throw new ArgumentNullException("accessToken is a required property for BotTokens and cannot be null");
            }
            this.AccessToken = accessToken;
        }

        /// <summary>
        /// Verification Token
        /// </summary>
        /// <value>Verification Token</value>
        [DataMember(Name = "verificationToken", IsRequired = true, EmitDefaultValue = true)]
        public string VerificationToken { get; set; }

        /// <summary>
        /// BOTアクセストークン
        /// </summary>
        /// <value>BOTアクセストークン</value>
        [DataMember(Name = "accessToken", IsRequired = true, EmitDefaultValue = true)]
        public string AccessToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BotTokens {\n");
            sb.Append("  VerificationToken: ").Append(VerificationToken).Append("\n");
            sb.Append("  AccessToken: ").Append(AccessToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
