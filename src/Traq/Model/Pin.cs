/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = DotnetTraq.Client.FileParameter;
using OpenAPIDateConverter = DotnetTraq.Client.OpenAPIDateConverter;

namespace DotnetTraq.Model
{
    /// <summary>
    /// ピン情報(メッセージ本体付き)
    /// </summary>
    [DataContract(Name = "Pin")]
    public partial class Pin : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Pin" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Pin() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Pin" /> class.
        /// </summary>
        /// <param name="userId">ピン留めしたユーザーUUID (required).</param>
        /// <param name="pinnedAt">ピン留めされた日時 (required).</param>
        /// <param name="message">message (required).</param>
        public Pin(Guid userId = default(Guid), DateTimeOffset pinnedAt = default(DateTimeOffset), Message message = default(Message))
        {
            this.UserId = userId;
            this.PinnedAt = pinnedAt;
            // to ensure "message" is required (not null)
            if (message == null)
            {
                throw new ArgumentNullException("message is a required property for Pin and cannot be null");
            }
            this.Message = message;
        }

        /// <summary>
        /// ピン留めしたユーザーUUID
        /// </summary>
        /// <value>ピン留めしたユーザーUUID</value>
        [DataMember(Name = "userId", IsRequired = true, EmitDefaultValue = true)]
        public Guid UserId { get; set; }

        /// <summary>
        /// ピン留めされた日時
        /// </summary>
        /// <value>ピン留めされた日時</value>
        [DataMember(Name = "pinnedAt", IsRequired = true, EmitDefaultValue = true)]
        public DateTimeOffset PinnedAt { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", IsRequired = true, EmitDefaultValue = true)]
        public Message Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Pin {\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  PinnedAt: ").Append(PinnedAt).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
