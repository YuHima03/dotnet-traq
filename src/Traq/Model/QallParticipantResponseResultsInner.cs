// <auto-generated>
/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization.Metadata;
using Traq.Client;

namespace Traq.Model
{
    /// <summary>
    /// QallParticipantResponseResultsInner
    /// </summary>
    public partial class QallParticipantResponseResultsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QallParticipantResponseResultsInner" /> class.
        /// </summary>
        /// <param name="participantId">対象参加者ID</param>
        /// <param name="status">success もしくは error</param>
        /// <param name="errorMessage">エラーがある場合の詳細</param>
        [JsonConstructor]
        public QallParticipantResponseResultsInner(Option<string?> participantId = default, Option<string?> status = default, Option<string?> errorMessage = default)
        {
            ParticipantIdOption = participantId;
            StatusOption = status;
            ErrorMessageOption = errorMessage;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of ParticipantId
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> ParticipantIdOption { get; private set; }

        /// <summary>
        /// 対象参加者ID
        /// </summary>
        /// <value>対象参加者ID</value>
        [JsonPropertyName("participantId")]
        public string? ParticipantId { get { return this.ParticipantIdOption; } set { this.ParticipantIdOption = new(value); } }

        /// <summary>
        /// Used to track the state of Status
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> StatusOption { get; private set; }

        /// <summary>
        /// success もしくは error
        /// </summary>
        /// <value>success もしくは error</value>
        [JsonPropertyName("status")]
        public string? Status { get { return this.StatusOption; } set { this.StatusOption = new(value); } }

        /// <summary>
        /// Used to track the state of ErrorMessage
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> ErrorMessageOption { get; private set; }

        /// <summary>
        /// エラーがある場合の詳細
        /// </summary>
        /// <value>エラーがある場合の詳細</value>
        [JsonPropertyName("errorMessage")]
        public string? ErrorMessage { get { return this.ErrorMessageOption; } set { this.ErrorMessageOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class QallParticipantResponseResultsInner {\n");
            sb.Append("  ParticipantId: ").Append(ParticipantId).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ErrorMessage: ").Append(ErrorMessage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="QallParticipantResponseResultsInner" />
    /// </summary>
    public class QallParticipantResponseResultsInnerJsonConverter : JsonConverter<QallParticipantResponseResultsInner>
    {
        /// <summary>
        /// Deserializes json to <see cref="QallParticipantResponseResultsInner" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override QallParticipantResponseResultsInner Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> participantId = default;
            Option<string?> status = default;
            Option<string?> errorMessage = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "participantId":
                            participantId = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "status":
                            status = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "errorMessage":
                            errorMessage = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (participantId.IsSet && participantId.Value == null)
                throw new ArgumentNullException(nameof(participantId), "Property is not nullable for class QallParticipantResponseResultsInner.");

            if (status.IsSet && status.Value == null)
                throw new ArgumentNullException(nameof(status), "Property is not nullable for class QallParticipantResponseResultsInner.");

            if (errorMessage.IsSet && errorMessage.Value == null)
                throw new ArgumentNullException(nameof(errorMessage), "Property is not nullable for class QallParticipantResponseResultsInner.");

            return new QallParticipantResponseResultsInner(participantId, status, errorMessage);
        }

        /// <summary>
        /// Serializes a <see cref="QallParticipantResponseResultsInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="qallParticipantResponseResultsInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, QallParticipantResponseResultsInner qallParticipantResponseResultsInner, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, qallParticipantResponseResultsInner, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="QallParticipantResponseResultsInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="qallParticipantResponseResultsInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, QallParticipantResponseResultsInner qallParticipantResponseResultsInner, JsonSerializerOptions jsonSerializerOptions)
        {
            if (qallParticipantResponseResultsInner.ParticipantIdOption.IsSet && qallParticipantResponseResultsInner.ParticipantId == null)
                throw new ArgumentNullException(nameof(qallParticipantResponseResultsInner.ParticipantId), "Property is required for class QallParticipantResponseResultsInner.");

            if (qallParticipantResponseResultsInner.StatusOption.IsSet && qallParticipantResponseResultsInner.Status == null)
                throw new ArgumentNullException(nameof(qallParticipantResponseResultsInner.Status), "Property is required for class QallParticipantResponseResultsInner.");

            if (qallParticipantResponseResultsInner.ErrorMessageOption.IsSet && qallParticipantResponseResultsInner.ErrorMessage == null)
                throw new ArgumentNullException(nameof(qallParticipantResponseResultsInner.ErrorMessage), "Property is required for class QallParticipantResponseResultsInner.");

            if (qallParticipantResponseResultsInner.ParticipantIdOption.IsSet)
                writer.WriteString("participantId", qallParticipantResponseResultsInner.ParticipantId);

            if (qallParticipantResponseResultsInner.StatusOption.IsSet)
                writer.WriteString("status", qallParticipantResponseResultsInner.Status);

            if (qallParticipantResponseResultsInner.ErrorMessageOption.IsSet)
                writer.WriteString("errorMessage", qallParticipantResponseResultsInner.ErrorMessage);
        }
    }

    /// <summary>
    /// The QallParticipantResponseResultsInnerSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(QallParticipantResponseResultsInner))]
    public partial class QallParticipantResponseResultsInnerSerializationContext : JsonSerializerContext { }
}
