/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Traq.Client.FileParameter;
using OpenAPIDateConverter = Traq.Client.OpenAPIDateConverter;

namespace Traq.Model
{
    /// <summary>
    /// QallParticipantResponseResultsInner
    /// </summary>
    [DataContract(Name = "qallParticipantResponse_results_inner")]
    public partial class QallParticipantResponseResultsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QallParticipantResponseResultsInner" /> class.
        /// </summary>
        /// <param name="participantId">対象参加者ID.</param>
        /// <param name="status">success もしくは error.</param>
        /// <param name="errorMessage">エラーがある場合の詳細.</param>
        public QallParticipantResponseResultsInner(string participantId = default(string), string status = default(string), string errorMessage = default(string))
        {
            this.ParticipantId = participantId;
            this.Status = status;
            this.ErrorMessage = errorMessage;
        }

        /// <summary>
        /// 対象参加者ID
        /// </summary>
        /// <value>対象参加者ID</value>
        [DataMember(Name = "participantId", EmitDefaultValue = false)]
        public string ParticipantId { get; set; }

        /// <summary>
        /// success もしくは error
        /// </summary>
        /// <value>success もしくは error</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// エラーがある場合の詳細
        /// </summary>
        /// <value>エラーがある場合の詳細</value>
        [DataMember(Name = "errorMessage", EmitDefaultValue = false)]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class QallParticipantResponseResultsInner {\n");
            sb.Append("  ParticipantId: ").Append(ParticipantId).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ErrorMessage: ").Append(ErrorMessage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
