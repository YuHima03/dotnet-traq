// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Abstractions.Extensions;
using System;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using Traq.Bots.Item.Actions.Activate;
using Traq.Bots.Item.Actions.Inactivate;
using Traq.Bots.Item.Actions.Join;
using Traq.Bots.Item.Actions.Leave;
using Traq.Bots.Item.Actions.Reissue;
namespace Traq.Bots.Item.Actions
{
    /// <summary>
    /// Builds and executes requests for operations under \bots\{botId}\actions
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ActionsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The activate property</summary>
        public global::Traq.Bots.Item.Actions.Activate.ActivateRequestBuilder Activate
        {
            get => new global::Traq.Bots.Item.Actions.Activate.ActivateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The inactivate property</summary>
        public global::Traq.Bots.Item.Actions.Inactivate.InactivateRequestBuilder Inactivate
        {
            get => new global::Traq.Bots.Item.Actions.Inactivate.InactivateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The join property</summary>
        public global::Traq.Bots.Item.Actions.Join.JoinRequestBuilder Join
        {
            get => new global::Traq.Bots.Item.Actions.Join.JoinRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The leave property</summary>
        public global::Traq.Bots.Item.Actions.Leave.LeaveRequestBuilder Leave
        {
            get => new global::Traq.Bots.Item.Actions.Leave.LeaveRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reissue property</summary>
        public global::Traq.Bots.Item.Actions.Reissue.ReissueRequestBuilder Reissue
        {
            get => new global::Traq.Bots.Item.Actions.Reissue.ReissueRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Traq.Bots.Item.Actions.ActionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ActionsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/bots/{botId}/actions", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Traq.Bots.Item.Actions.ActionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ActionsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/bots/{botId}/actions", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
