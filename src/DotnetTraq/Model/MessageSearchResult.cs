/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = DotnetTraq.Client.FileParameter;
using OpenAPIDateConverter = DotnetTraq.Client.OpenAPIDateConverter;

namespace DotnetTraq.Model
{
    /// <summary>
    /// メッセージ検索結果
    /// </summary>
    [DataContract(Name = "MessageSearchResult")]
    public partial class MessageSearchResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageSearchResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MessageSearchResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageSearchResult" /> class.
        /// </summary>
        /// <param name="totalHits">検索にヒットしたメッセージ件数 (required).</param>
        /// <param name="hits">検索にヒットしたメッセージの配列 (required).</param>
        public MessageSearchResult(long totalHits = default(long), List<Message> hits = default(List<Message>))
        {
            this.TotalHits = totalHits;
            // to ensure "hits" is required (not null)
            if (hits == null)
            {
                throw new ArgumentNullException("hits is a required property for MessageSearchResult and cannot be null");
            }
            this.Hits = hits;
        }

        /// <summary>
        /// 検索にヒットしたメッセージ件数
        /// </summary>
        /// <value>検索にヒットしたメッセージ件数</value>
        [DataMember(Name = "totalHits", IsRequired = true, EmitDefaultValue = true)]
        public long TotalHits { get; set; }

        /// <summary>
        /// 検索にヒットしたメッセージの配列
        /// </summary>
        /// <value>検索にヒットしたメッセージの配列</value>
        [DataMember(Name = "hits", IsRequired = true, EmitDefaultValue = true)]
        public List<Message> Hits { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MessageSearchResult {\n");
            sb.Append("  TotalHits: ").Append(TotalHits).Append("\n");
            sb.Append("  Hits: ").Append(Hits).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
